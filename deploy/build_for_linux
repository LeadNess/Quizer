#!/bin/bash

python3 -m venv venv
echo "Created virtual environment..."
. ./venv/bin/activate
mkdir tmp
cp -r quizer tmp/quizer
rm -r quizer

echo "===========================================Start loading requirements==========================================="
pip install --no-cache-dir -r requirements.txt
echo "=========================================Successfully loaded requirements======================================="

django-admin startproject quizer
SECRET_KEY=$(cat ./quizer/quizer/settings.py | grep SECRET_KEY | cut -d "'" -f 2)
rm -r quizer
cp -r tmp/quizer quizer
rm -r tmp

SETTINGS="$(echo "$(cat ./deploy/deploy_settings.py)")"
SETTINGS="${SETTINGS/GENERATED_SECRET_KEY/${SECRET_KEY}}"

echo "===========================================Initialized django app==============================================="
echo "==========================================Enter configuration data============================================="
read -r -p "MongoDB host (default: localhost) " MONGO_HOST
if [ "${MONGO_HOST}" == "" ]
then
  MONGO_HOST="localhost"
fi
SETTINGS="${SETTINGS/os.environ.get(\'MONGO_HOST\', \'localhost\')/\'${MONGO_HOST}\'}"

read -r -p "MongoDB port (default: 27017): " MONGO_PORT
if [ "${MONGO_PORT}" == "" ]
then
  MONGO_PORT="27017"
fi
SETTINGS="${SETTINGS/int(os.environ.get(\'MONGO_PORT\', 27017))/${MONGO_PORT}}"

read -r -p "MongoDB database name (default: 'quizer'): " MONGO_DBNAME
if [ "${MONGO_DBNAME}" == "" ]
then
  MONGO_DBNAME="quizer"
fi
SETTINGS="${SETTINGS/os.environ.get(\'MONGO_DBNAME\', \'quizer\')/\'${MONGO_DBNAME}\'}"

echo "${SETTINGS}" > ./quizer/quizer/settings.py

python quizer/manage.py makemigrations
python quizer/manage.py migrate
echo "===========================================Start creating groups==============================================="

echo 'from django.contrib.auth.models import Group; l = Group(id=1, name="lecturer"); l.save()' | python quizer/manage.py shell
echo "Created 'lecturer' group"
echo 'from django.contrib.auth.models import Group; s = Group(id=2, name="student"); s.save()' | python quizer/manage.py shell
echo "Created 'student' group"
echo "===========================================Enter superuser info==============================================="
python quizer/manage.py createsuperuser
