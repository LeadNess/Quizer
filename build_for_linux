#!/bin/bash

python3 -m venv venv
echo "Created virtual environment..."
. ./venv/bin/activate
mkdir tmp
cp -r quizer tmp/quizer
rm -r quizer

echo "===========================================Start loading requirements==========================================="
pip install --no-cache-dir -r requirements.txt
echo "=========================================Successfully loaded requeirments======================================="

django-admin startproject quizer
SECRET_KEY=$(cat ./quizer/quizer/settings.py | grep SECRET_KEY | cut -d "'" -f 2)

cd quizer
python manage.py startapp main
cd ..
rm -r quizer
cp -r tmp/quizer quizer

OLD_SECRET_KEY=$(cat ./quizer/quizer/settings.py | grep SECRET_KEY | cut -d "'" -f 2)
NEW_SETTINGS="$(echo "$(cat ./quizer/quizer/settings.py)" | sed "s/${OLD_SECRET_KEY}/${SECRET_KEY}/")"
echo "${NEW_SETTINGS}" > ./quizer/quizer/settings.py

rm -r tmp
echo "===========================================Initialized django app==============================================="
echo "==========================================Enter configuration data============================================="
read -r -p "MongoDB host: " MONGO_HOST
if [ "${MONGO_HOST}" == "" ]
then
  MONGO_HOST="localhost"
fi
echo "MONGO_HOST = '${MONGO_HOST}'" >> config.py

read -r -p "MongoDB port: " MONGO_PORT
if [ "${MONGO_PORT}" == "" ]
then
  MONGO_PORT="27017"
fi
echo "MONGO_PORT = '${MONGO_PORT}'" >> config.py

read -r -p "MongoDB user: " MONGO_USER
if [ "${MONGO_USER}" == "" ]
then
  MONGO_USER=""
fi
echo "MONGO_USER = '${MONGO_USER}'" >> config.py

read -r -p "MongoDB password: " MONGO_PASSWORD
if [ "${MONGO_PASSWORD}" == "" ]
then
  MONGO_PASSWORD=""
fi
echo "MONGO_PASSWORD = '${MONGO_PASSWORD}'" >> config.py

read -r -p "MongoDB database name: " MONGO_DBNAME
if [ "${MONGO_DBNAME}" == "" ]
then
  MONGO_DBNAME="quizer"
fi
echo "MONGO_DBNAME = '${MONGO_DBNAME}'" >> config.py

cp config.py ./quizer/quizer/config.py
cp config.py ./quizer/main/config.py
rm config.py

python quizer/manage.py makemigrations
python quizer/manage.py migrate
echo "===========================================Start creating groups==============================================="

echo 'from django.contrib.auth.models import Group; l = Group(id=1, name="lecturer"); l.save()' | python quizer/manage.py shell
echo "Created 'lecturer' group"
echo 'from django.contrib.auth.models import Group; s = Group(id=2, name="student"); s.save()' | python quizer/manage.py shell
echo "Created 'student' group"
echo "===========================================Enter superuser info==============================================="
python quizer/manage.py createsuperuser
echo 'from django.contrib.auth.models import User; a = User.objects.get(id=1); a.groups.add(1); a.save(); print("Added user %s to group %s" % (a.username, "lecturer"))'  | python quizer/manage.py shell
echo 'from django.contrib.auth.models import User; s = User(id=4, username="user"); s.set_password("password"); s.groups.add(2); s.save()' | python quizer/manage.py shell
echo "Added user 'user' with password 'password' to group 'student'"
echo "from main.models import QuestionsStorage; strg = QuestionsStorage.connect_to_mongodb(host='${MONGO_HOST}', port='${MONGO_PORT}', db_name='${MONGO_DBNAME}'); strg.add_one(question={'formulation': 'First question with multiselect', 'tasks_num': 3, 'multiselect': True, 'with_images': False, 'options': [{'option': 'First true option', 'is_true': True}, {'option': 'Second false option', 'is_true': False}, {'option': 'Third true option', 'is_true': True}]}, test_id=1); strg.add_one(question={'formulation': 'Second question with single answer', 'tasks_num': 2, 'multiselect': False, 'with_images': False, 'options': [{'option': 'False option', 'is_true': False}, {'option': 'True option', 'is_true': True}]}, test_id=1)" | python ./quizer/manage.py shell
